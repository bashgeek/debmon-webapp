#!/usr/bin/perl

use YAML;
use IO::File;
use Parse::Debian::Packages;
use PerlIO::gzip;
use autodie;
use strict;
use v5.10;
use Data::Serializer;

my @distributions = qw ( debmon-squeeze debmon-wheezy );
my @architectures = qw ( amd64 i386 armhf ); 
my @sections = qw (main contrib non-free); 
my $repo_base = '/srv/repository/repo'; 
my $store = '/srv/repository/repo-data';

my $serializer = Data::Serializer->new(
		serializer => 'FreezeThaw',
		compress   => 1,
);

my $data;

foreach my $dist (@distributions) {
	foreach my $arch (@architectures) {
		foreach my $section (@sections) {
				my $packages_file = "$repo_base/dists/$dist/$section/binary-$arch/Packages.gz";
				next unless -e $packages_file;
				my $fh = IO::File->new($packages_file, "<:gzip" ) or die "$!";
				my $parser = Parse::Debian::Packages->new( $fh );
				while (my %package = $parser->next) {
						my $source = $package{Source} || $package{Package};
						if (defined $data->{ $dist }->{ $source }) {
								push @{ $data->{ $dist }->{ $source }->{ Architectures } }, $package{Architecture}; 
						} else {
							$data->{ $dist }->{ $source } = \%package;
							$data->{ $dist }->{ $source }->{ Architectures }  = [ $package{Architecture} ];
						}
				}
		}
	}
}

$serializer->store($data,$store);
